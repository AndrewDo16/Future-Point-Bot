from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler

from database import get_chat_id_by_group_name


async def generate_invite(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
    group_name = query.data

    # –ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    chat_id = get_chat_id_by_group_name(group_name)

    if not chat_id:
        await query.edit_message_text("–û—à–∏–±–∫–∞: –ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    try:
        invite_link = await context.bot.create_chat_invite_link(
            chat_id=chat_id,
            name=f"–°—Å—ã–ª–∫–∞ –¥–ª—è {group_name}",
            expire_date=None,  # –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å—Ç–µ–∫–∞–µ—Ç
            member_limit=1  # —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è
        )
        await query.edit_message_text(f"üîó –í–∞—à–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞::\n{invite_link.invite_link}",
                                      reply_markup=InlineKeyboardMarkup([
                                          [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="main_profile")]
                                      ])
                                      )
    except Exception as e:
        await query.edit_message_text(f"–û—à–∏–±–∫–∞: {e}")


generate_invite_handler = CallbackQueryHandler(generate_invite, pattern="^(fp_club_group|etc)$")
